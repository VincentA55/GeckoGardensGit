[gd_scene load_steps=4 format=3 uid="uid://bvacp6if2o5v3"]

[ext_resource type="Texture2D" uid="uid://b8cqhee2pasge" path="res://Healthring/HealthringTextures/ringbase.png" id="1_npmdv"]
[ext_resource type="Texture2D" uid="uid://bt713ej16n8bd" path="res://Healthring/HealthringTextures/ringfillfoodGRAD.png" id="2_11a7v"]

[sub_resource type="GDScript" id="GDScript_mus4l"]
script/source = "@tool
extends Control

# The 3D character whose health this bar represents
var character: Node3D

func setRingChar(char: Node3D) -> void:
	
	character = char
	if not is_instance_valid(character):
		print(\"HealthRing was given an invalid character.\")
		return

	#Connect this script's functions to the character's signals.
	character.hunger_changed.connect(Callable(self, \"update_hunger\"))
	character.died.connect(Callable(self, \"_on_character_died\")) 
	
	# --- ANNOUNCE THE SETUP ---
	#print_rich(\"[color=green]HealthRing #%d is now tracking Gecko #%d[/color]\" % [get_instance_id(), character.get_instance_id()])
	
	var gecko_subviewport = character.find_child(\"HeadViewport\") 
	if gecko_subviewport:
		# Now we get the texture from THIS specific viewport
		$TextureRect.texture = character.get_SubViewport().get_texture()
		
	else:
		print(\"Could not find a SubViewport on the assigned gecko.\")

	update_hunger(character.current_hunger, character.hungerMax)



func update_hunger(current_hunger, hungerMax):

	if not is_instance_valid(character):
		return

	#print(\"HealthRing for '\", character.name, \"' received update: \", current_hunger, \"/\", hungerMax)

	$TextureProgressBar.value = current_hunger


# Add this function so the ring can remove itself when the character dies.
func _on_character_died():
	queue_free()
"

[node name="Healthring" type="Control"]
custom_minimum_size = Vector2(100, 100)
layout_mode = 3
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 4
size_flags_vertical = 4
script = SubResource("GDScript_mus4l")

[node name="TextureRect" type="TextureRect" parent="."]
z_index = 1
layout_mode = 0
offset_left = -95.0
offset_top = -23.925
offset_right = 242.0
offset_bottom = 155.075
stretch_mode = 3

[node name="TextureProgressBar" type="TextureProgressBar" parent="."]
custom_minimum_size = Vector2(100, 100)
layout_mode = 0
offset_right = 195.0
offset_bottom = 194.0
scale = Vector2(0.7, 0.7)
value = 33.0
fill_mode = 5
texture_under = ExtResource("1_npmdv")
texture_progress = ExtResource("2_11a7v")
tint_under = Color(0, 0, 0, 0.227451)
